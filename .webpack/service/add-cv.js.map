{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./add-cv.js","webpack:///./config/db.js","webpack:///./db_connect.js","webpack:///external \"postgresql-easy\""],"names":["db","require","module","exports","main","event","headers","sql","data","JSON","parse","body","result","query","pathParameters","userid","cv_name","cv_url","statusCode","stringify","message","id","cv","e","database","host","port","user","password","PgConnection","dbConfig","pg"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,MAAMA,KAAKC,mBAAOA,CAAC,qCAAR,CAAX;;AAEAC,OAAOC,OAAP,CAAeC,IAAf,GAAsB,MAAMC,KAAN,IAAe;AACnC,QAAMC,UAAU;AACd,mCAA+B,GADjB;AAEd,wCAAoC;AAFtB,GAAhB;AAIA,QAAMC,MAAO;;;;GAAb;AAKA,MAAI;AACF,UAAMC,OAAOC,KAAKC,KAAL,CAAWL,MAAMM,IAAjB,CAAb;AACA,UAAMC,SAAS,MAAMZ,GAAGa,KAAH,CACnBN,GADmB,EAEnBF,MAAMS,cAAN,CAAqBC,MAFF,EAGnBP,KAAKQ,OAHc,EAInBR,KAAKS,MAJc,CAArB;AAMA,WAAO;AACLC,kBAAY,GADP;AAELZ,aAFK;AAGLK,YAAMF,KAAKU,SAAL,CAAe;AACnBC,iBAAS,aAAaR,MADH;AAEnBS,YAAIhB,MAAMS,cAAN,CAAqBO,EAFN;AAGnBC,YAAI;AACFN,mBAASR,KAAKQ,OADZ;AAEFC,kBAAQT,KAAKS;AAFX;AAHe,OAAf;AAHD,KAAP;AAYD,GApBD,CAoBE,OAAOM,CAAP,EAAU;AACV,WAAO;AACLL,kBAAYK,EAAEL,UAAF,IAAgB,GADvB;AAELZ,aAFK;AAGLK,YAAM,mCAAmCY;AAHpC,KAAP;AAKD;AACF,CArCD,C;;;;;;;;;;;ACFArB,OAAOC,OAAP,GAAiB;AACfqB,YAAU,UADK;AAEfC,QAAM,+DAFS;AAGfC,QAAM,MAHS;AAIfC,QAAM,QAJS;AAKfC,YAAU;AALK,CAAjB,C;;;;;;;;;;;ACAA,MAAMC,eAAe5B,mBAAOA,CAAC,wCAAR,CAArB;AACA,MAAM6B,WAAW7B,mBAAOA,CAAC,mCAAR,CAAjB;AACA,MAAM8B,KAAK,IAAIF,YAAJ,CAAiBC,QAAjB,CAAX;AACA5B,OAAOC,OAAP,GAAiB4B,EAAjB,C;;;;;;;;;;;ACHA,4C","file":"add-cv.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./add-cv.js\");\n","const db = require(\"./db_connect\");\n\nmodule.exports.main = async event => {\n  const headers = {\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Credentials\": true\n  };\n  const sql = `\n  UPDATE profiles\n  SET cv_name = $2, cv_url = $3\n  WHERE id = $1 \n  `;\n  try {\n    const data = JSON.parse(event.body);\n    const result = await db.query(\n      sql,\n      event.pathParameters.userid,\n      data.cv_name,\n      data.cv_url\n    );\n    return {\n      statusCode: 200,\n      headers,\n      body: JSON.stringify({\n        message: \"CV added\" + result,\n        id: event.pathParameters.id,\n        cv: {\n          cv_name: data.cv_name,\n          cv_url: data.cv_url\n        }\n      })\n    };\n  } catch (e) {\n    return {\n      statusCode: e.statusCode || 500,\n      headers,\n      body: \"ERROR: CV could not be added: \" + e\n    };\n  }\n};\n","module.exports = {\n  database: \"postgres\",\n  host: \"teithe-career-portal.cpss7xpeviml.us-east-1.rds.amazonaws.com\",\n  port: \"5432\",\n  user: \"master\",\n  password: \"Passw0rd!\"\n};\n","const PgConnection = require(\"postgresql-easy\");\nconst dbConfig = require(\"./config/db\");\nconst pg = new PgConnection(dbConfig);\nmodule.exports = pg;\n","module.exports = require(\"postgresql-easy\");"],"sourceRoot":""}